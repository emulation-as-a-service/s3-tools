#!/bin/sh -eu

bucket="$1"
user="${2-}"
tenant="${3-}"
type="${4-policy}"

s3api() {
  # See https://github.com/boto/boto3/pull/2746
  aws s3api --endpoint-url "$AWS_ENDPOINT_URL" "$@"
}

default_policy='{
  "Statement": []
}
'

default_cors='{
  "CORSRules": [
    {
      "AllowedHeaders": [
      ],
      "AllowedMethods": [
      ],
      "AllowedOrigins": [
      ],
      "ExposeHeaders": [
      ],
      "MaxAgeSeconds": 3600
    }
  ]
}
'

getConfig() {
  config="$(s3api get-bucket-"$1" --bucket "$2" || :)"
  case "$1" in
  policy)
    config="$(printf %s "$config" | jq -r ".Policy")"
    : "${config:="$default_policy"}"
    ;;
  cors)
    : "${config:="$default_cors"}"
    ;;
  esac
  printf '%s\n' "$config"
}

putConfig() {
  # printf '%s\n' "$3" | s3api put-bucket-"$1" --bucket "$2" --"$1" file:///dev/stdin
  s3api put-bucket-"$1" --bucket "$2" --"$1" "$3"
}

tmp() {
  mktemp -t -- "$(printf %s "$1" | tr / -).tmp.XXXXXXXXXX"
}

edit() {
  for command in "${VISUAL-}" "${EDITOR-}" editor vi nano; do
    if command -v "$command" >/dev/null; then
      "$command" -- "$1"
      return
    fi
  done
}

policy="$(getConfig "$type" "$bucket" | jq)"
policy2="$policy"

if test "$user"; then
  tenant="${tenant:-$(s3api get-bucket-acl --bucket "$bucket" | jq -r .Owner.ID)}"
  if ! test "$tenant"; then
    echo "Error: could not determine tenant ID automatically"
    exit 1
  fi
  user="arn:aws:iam::$tenant:user/$user"

  policy2="$(printf %s "$policy" | bucket="$bucket" user="$user" jq '.Statement += [{
    "Action": "s3:*",
    "Effect": "Allow",
    "Resource": [
      "arn:aws:s3:::" + $ENV.bucket,
      "arn:aws:s3:::" + $ENV.bucket + "/*"
    ],
    "Principal": {
      "AWS": $ENV.user
    }
  }]')"
fi

file="$(tmp "$bucket.$type.old")"
file2="$(tmp "$bucket.$type.new")"
printf '%s\n' "$policy" >"$file"
printf '%s\n' "$policy2" >"$file2"
edit "$file2"
policy2="$(cat -- "$file2")"

if test "$policy" != "$policy2"; then
  # printf '%s\n' "$policy2"
  diff -u -- "$file" "$file2" || :
  putConfig "$type" "$bucket" "$policy2"
fi

# rm -- "$file" "$file2"
